{{- if .Values.prometheus.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: prometheus-server
  replicas: {{ .Values.prometheus.replicas }}
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: {{ .Values.prometheus.image.name }}:{{ .Values.prometheus.image.tag }}
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
            - "--web.enable-lifecycle"
          ports:
            - containerPort: 9090
          resources:
            {{- toYaml .Values.prometheus.resources | nindent 12 }}
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
            - name: prometheus-alert-rules
              mountPath: /etc/prometheus-rules/
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
        - name: prometheus-alert-rules
          configMap:
            defaultMode: 420
            name: prometheus-alert-rules
        {{- if .Values.prometheus.persistence.enabled }}
        - persistentVolumeClaim:
            claimName: prometheus-pvc
          name: prometheus-storage-volume
        {{- else }}
        - emptyDir: {}
          name: prometheus-storage-volume
        {{- end }}
      {{- if .Values.prometheus.tolerations }}
      tolerations:
        {{- toYaml .Values.prometheus.tolerations | nindent 8 }}
      {{- end }}
{{- end }}
