{{- if .Values.alertmanager.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.alertmanager.replicas }}
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      name: alertmanager
      labels:
        app: alertmanager
    spec:
      containers:
        - name: alertmanager
          image: "{{ .Values.alertmanager.image.registry }}/{{ .Values.alertmanager.image.name }}:{{ .Values.alertmanager.image.tag }}"
          imagePullPolicy: {{ .Values.alertmanager.image.policy }}
          args:
            - "--config.file=/etc/alertmanager/config.yml"
            - "--storage.path=/alertmanager"
          ports:
            - name: alertmanager
              containerPort: 9093
          resources:
            {{- toYaml .Values.alertmanager.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/alertmanager
            - name: templates-volume
              mountPath: /etc/alertmanager-templates
            - name: alertmanager
              mountPath: /alertmanager
      volumes:
        - name: config-volume
          configMap:
            name: alertmanager-config
        - name: templates-volume
          configMap:
            name: alertmanager-templates
        {{- if .Values.alertmanager.persistence.enabled }}
        - persistenceVolumeClaim:
            claimName: alertmanager-pvc
          name: alertmanager
        {{- else }}
        - emptyDir: {}
          name: alertmanager
        {{- end }}
{{- end }}
